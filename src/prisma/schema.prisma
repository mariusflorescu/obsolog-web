generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Plan {
  HOBBY
}

enum Environment {
  DEVELOPMENT
  STAGING
  PRODUCTION
}

model Tenant {
  id        String   @id
  slug      String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  plan Plan @default(HOBBY)

  project Project[]
  channel Channel[]
  apiKey  ApiKey[]
  event   Event[]

  @@index([id, slug])
}

model Project {
  id          String   @id @default(cuid())
  url         String
  name        String
  description String?
  createdAt   DateTime @default(now())

  tenantId String
  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  apiKey ApiKey[]

  @@index([tenantId])
}

model Channel {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())

  tenantId String
  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  event Event[]

  @@unique([name, tenantId])
  @@index([tenantId])
}

model ApiKey {
  id          String      @id
  name        String
  description String?
  environment Environment
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())

  tenantId String
  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  event Event[]

  @@index([projectId])
  @@index([tenantId])
}

model Event {
  id          String   @id @default(cuid())
  name        String
  description String?
  user        String?
  createdAt   DateTime @default(now())

  apiKeyId String
  apiKey   ApiKey @relation(fields: [apiKeyId], references: [id], onDelete: Cascade)

  channelId String
  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)

  tenantId String
  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([apiKeyId])
  @@index([channelId])
  @@index([tenantId])
}
